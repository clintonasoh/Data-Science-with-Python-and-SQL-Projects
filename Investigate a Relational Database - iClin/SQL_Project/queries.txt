I decided to work with the questions suggested in the project lesson. I chose all three questions from question set 1 and one question from question set 2.

- Question 1
We want to understand more about the movies that families are watching. The following categories are considered family movies: Animation, Children, Classics, Comedy, Family and Music.
Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

- QUERY 1:
SELECT f.title film_title, c.name category_name, COUNT(r.rental_id) rental_count
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
JOIN inventory i
ON i.film_id = f.film_id
JOIN rental r
ON r.inventory_id = i.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY film_title, category_name
ORDER BY category_name, film_title;

- Question 2
Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.

- QUERY 2:
SELECT f.title film_title, c.name category_name, f.rental_duration ,
       NTILE(4) OVER (ORDER BY f.rental_duration) standard_quartile
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3;

- Question 3
Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:
  *Category
  * Rental length category
  * Count

QUERY 3:
SELECT category_name, standard_quartile, COUNT(standard_quartile)
FROM
    (SELECT f.title film_title, c.name category_name, f.rental_duration ,
           NTILE(4) OVER (ORDER BY f.rental_duration) standard_quartile
    FROM film f
    JOIN film_category fc
    ON f.film_id = fc.film_id
    JOIN category c
    ON c.category_id = fc.category_id
    WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
    ORDER BY 3) sub1
GROUP BY 1, 2
ORDER BY 1, 2;

Question 4
Finally, for each of these top 10 paying customers, I would like to find out the difference across their monthly payments during 2007. Please go ahead and write a query to compare the payment amounts in each successive month. Repeat this for each of these 10 paying customers. Also, it will be tremendously helpful if you can identify the customer name who paid the most difference in terms of payments.

- QUERY 4
SELECT DATE_TRUNC('month', p.payment_date) pay_month, CONCAT(c.first_name, ' ', c.last_name) full_name, COUNT(p.amount) pay_countpermonth, SUM(p.amount) pay_amount
FROM payment p
JOIN customer c
ON c.customer_id = p.customer_id
WHERE (p.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
AND CONCAT(c.first_name, ' ', c.last_name) IN
	(SELECT full_name
	FROM
		(SELECT CONCAT(c.first_name, ' ', c.last_name) full_name, SUM(p.amount) amount_total
		FROM payment p
		JOIN customer c
		ON p.customer_id = c.customer_id
		GROUP BY 1
		ORDER BY 2 DESC
		LIMIT 10) sub1)
GROUP BY 2, 1
ORDER BY 2, 1, 3
